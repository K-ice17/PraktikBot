import os
from datetime import datetime
from flask import Flask, request
from telegram import Bot, Update, ReplyKeyboardMarkup

TOKEN = os.getenv('TELEGRAM_TOKEN')
if not TOKEN:
    raise RuntimeError("TELEGRAM_TOKEN environment variable not set")

bot = Bot(token=TOKEN)

app = Flask(__name__)

# –•—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (chat_id)
user_categories = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
keyboard = [['üßπ –ö–ª–∏–Ω–∏–Ω–≥'], ['üíª IT'], ['üìÑ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç']]
reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)

def send_to_sheets(user_id, category, text):
    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets
    pass

def send_to_group(user_id, category, text):
    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram-–≥—Ä—É–ø–ø—É
    pass

@app.route(f'/{TOKEN}', methods=['POST'])
def telegram_webhook():
    data = request.get_json(force=True)
    update = Update.de_json(data, bot)
    if not update.message or update.message.text is None:
        return 'OK'
    chat_id = update.message.chat.id
    text = update.message.text
    user = update.message.from_user
    user_id = user.id
    username = user.username or ''
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–∞–π–ª
    with open('messages.log', 'a', encoding='utf-8') as f:
        f.write(f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')} - {user_id} - {username} - {text}\n")
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
    if text == '/start':
        user_categories[chat_id] = None
        bot.send_message(chat_id=chat_id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:", reply_markup=reply_markup)
    elif text in ['üßπ –ö–ª–∏–Ω–∏–Ω–≥', 'üíª IT', 'üìÑ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç']:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        user_categories[chat_id] = text
        bot.send_message(chat_id=chat_id, text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–µ–º—É \"{text}\". –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —ç—Ç–æ–π —Ç–µ–º–µ.")
    else:
        # –û–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        category = user_categories.get(chat_id)
        if category:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
            send_to_sheets(user_id, category, text)
            send_to_group(user_id, category, text)
            bot.send_message(chat_id=chat_id, text="–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ.")
            user_categories[chat_id] = None
        else:
            bot.send_message(chat_id=chat_id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.", reply_markup=reply_markup)
    return 'OK'

if __name__ == '__main__':
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –Ω–∞ Render
    render_url = os.getenv('RENDER_EXTERNAL_URL')
    if render_url:
        webhook_url = f"{render_url}/{TOKEN}"
        bot.set_webhook(webhook_url)
    else:
        hostname = os.getenv('RENDER_EXTERNAL_HOSTNAME')
        if hostname:
            webhook_url = f"https://{hostname}/{TOKEN}"
            bot.set_webhook(webhook_url)
    # –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞
    port = int(os.getenv('PORT', 5000))
    app.run(host='0.0.0.0', port=port)
